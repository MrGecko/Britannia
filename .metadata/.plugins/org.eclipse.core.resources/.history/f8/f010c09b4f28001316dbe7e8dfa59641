package fr.gecko.camera;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.InputAdapter;
import com.badlogic.gdx.graphics.Camera;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.InputListener;

import fr.gecko.input.KeyTracker;
import fr.gecko.stage.GameStage;

public class CameraController extends Actor {

	private Camera camera;
	private float speedFactor = 600f;
	
	public CameraController(Camera cam)
	{
		super();
		this.camera = cam;
	}
	
	@Override
	public void act(float dt){	
		Gdx.app.log("camera", "hey");

		GameStage gameStage = (GameStage) getStage();
		
		if (gameStage.getKeyMap().containsKey(Input.Keys.ESCAPE)) {
			Gdx.app.exit();
		}	
		
		if (gameStage.getKeyMap().containsKey(Input.Keys.Q)|| gameStage.getKeyMap().containsKey(Input.Keys.A)) {
			camera.translate(-speedFactor * dt, 0, 0);
		}

		if (gameStage.getKeyMap().containsKey(Input.Keys.D)) {
			camera.translate(speedFactor * dt, 0, 0);
		}	

		if (gameStage.getKeyMap().containsKey(Input.Keys.Z) || gameStage.getKeyMap().containsKey(Input.Keys.W)) {
			camera.translate(0, speedFactor * dt, 0);
		}

		if (gameStage.getKeyMap().containsKey(Input.Keys.S)) {
			camera.translate(0, -speedFactor * dt, 0);
		}
		
		camera.update();
	}
	

}

